#!/bin/bash -ex
#
# this requires `apt-get install ripgrep` to provide `rg`

export LC_ALL=C.UTF-8

faup=~/code/stricaud/faup/build/src/tools/faup

if [ ! -e $faup ]; then
    echo faup not installed, rsyncing from gcc149
    rsync -axvz --progress \
          fdroid@gcc149.osuosl.org:/data/ttt-apks/extracted-features/unzip-faup/ \
          /data/ttt-apks/extracted-features/unzip-faup/
    rsync -axvz --progress --delete-after --dry-run \
          fdroid@gcc149.osuosl.org:/data/ttt-apks/extracted-features/unzip-faup/ \
          /data/ttt-apks/extracted-features/unzip-faup/
    exit
fi

i=0
for f in /data/malware-apks/androzoo/top10ish-per-tracker-sdk/*.apk \
	     /data/malware-apks/known-good/f-droid.org/*/*.apk \
             /data/malware-apks/ikarus/*/*_[0-9]* \
             /data/malware-apks/random-google-play/*.apk \
             /data/malware-apks/covid-19-set/*/*.apk \
             /data/malware-apks/github.com/*/*/*/*/*/*.apk; do
    outpath=${f#/data/malware-apks/}
    outpath=${outpath#/data/ttt-apks/}
    output=/data/ttt-apks/extracted-features/ripgrep-faup/${outpath}.ripgrep-faup.csv.gz
    test -e "$output" && continue
    test -d "$(dirname $output)" || mkdir -p "$(dirname $output)"
    # use -c rather than -p to send the filenames to faup
    # send "n" to unzip to avoid waiting at password prompts
    { /bin/echo "n" | unzip -c "$f" | strings | rg '[^ \t<>#()]{0,4000}\w\.\w\w[^ \t<>#()]{0,4000}' | cut --characters=1-8000 |  $faup -p | grep --text -v -e ',no_tld$' -e ',unknown_tld$' | sort -u | gzip -9 > "$output" 2>&1; } &
    i=$((i+1))
    if [ $i -gt 60 ]; then
        date
        wait
        i=0
    fi
done
